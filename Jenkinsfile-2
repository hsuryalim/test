pipeline {
	agent {
		docker {
			image 'golang:alpine'
		}
	}

	options {
		timestamps()
		buildDiscarder(logRotator(numToKeepStr: 1))
	}

	stages {
		stage('Build') {
			steps {
				echo "build step.."
				//script {
				//	currentBuild.result = "ABORTED"
				//}
			}
		}
	}

	post {
		success {
			echo "post->success is called"
		}
		failure {
			echo "post->failure is called"
		}
		always {
			echo "post->always is called"
		}
		changed {
			echo "post->changed is called"
		}
		unstable {
			echo "post->unstable is called"
		}
		fixed {
			echo "post->fixed is called"
		}
		regression {
			echo "post->regres is called"
		}
		aborted {
			echo "post->aborted is called"
		}
		cleanup {
			echo "post->cleanup is called"
		}
	}
}
